name: Publish Python Distro

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  build_sdist:
    name: Build SDist # Build the TARBALL distro
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install pypa/build
        run: >-
          python -m pip install --upgrade pip
          && python -m pip install build --user
      - name: Build source tarball
        run: python -m build --sdist
      - name: Store the distro packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/*.tar.gz

  build_wheels:
    name: Build Wheels for each platform
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: pypa/cibuildwheel@v2.16
        env:
          CIBW_ARCHS_MACOS: auto universal2

      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: wheelhouse/*.whl

  publish-to-pypi:
    name: Publish Python Distro to PyPI

    if: startsWith(github.ref, 'refs/tags/')  # Only publish on tags

    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/SVerilogPy
    permissions:
      id-token: write

    steps:
      - name: Download distro packages
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish Distro to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign the Python Distro ans Upload to GitHub Releases

    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
    - name: Download all the distros
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v1.2.3
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'