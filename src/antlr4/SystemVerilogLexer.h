
// Generated from SystemVerilogLexer.g4 by ANTLR 4.13.1

#pragma once


#include "antlr4-runtime.h"




class  SystemVerilogLexer : public antlr4::Lexer {
public:
  enum {
    ACCEPT_ON = 1, ALIAS = 2, ALWAYS = 3, ALWAYS_COMB = 4, ALWAYS_FF = 5, 
    ALWAYS_LATCH = 6, AND = 7, ASSERT = 8, ASSIGN = 9, ASSUME = 10, AUTOMATIC = 11, 
    BEFORE = 12, BEGIN = 13, BIND = 14, BINS = 15, BINSOF = 16, BIT = 17, 
    BREAK = 18, BUF = 19, BUFIF0 = 20, BUFIF1 = 21, BYTE = 22, CASE = 23, 
    CASEX = 24, CASEZ = 25, CELL = 26, CHANDLE = 27, CHECKER = 28, CLASS = 29, 
    CLOCKING = 30, CMOS = 31, CONFIG = 32, CONST = 33, CONSTRAINT = 34, 
    CONTEXT = 35, CONTINUE = 36, COVER = 37, COVERGROUP = 38, COVERPOINT = 39, 
    CROSS = 40, DEASSIGN = 41, DEFAULT = 42, DEFPARAM = 43, DESIGN = 44, 
    DISABLE = 45, DIST = 46, DO = 47, DPI = 48, DPI_C = 49, EDGE = 50, ELSE = 51, 
    END = 52, ENDCASE = 53, ENDCHECKER = 54, ENDCLASS = 55, ENDCLOCKING = 56, 
    ENDCONFIG = 57, ENDFUNCTION = 58, ENDGENERATE = 59, ENDGROUP = 60, ENDINTERFACE = 61, 
    ENDMODULE = 62, ENDPACKAGE = 63, ENDPRIMITIVE = 64, ENDPROGRAM = 65, 
    ENDPROPERTY = 66, ENDSPECIFY = 67, ENDSEQUENCE = 68, ENDTABLE = 69, 
    ENDTASK = 70, ENUM = 71, EVENT = 72, EVENTUALLY = 73, EXPECT = 74, EXPORT = 75, 
    EXTENDS = 76, EXTERN = 77, FINAL = 78, FIRST_MATCH = 79, FOR = 80, FORCE = 81, 
    FOREACH = 82, FOREVER = 83, FORK = 84, FORKJOIN = 85, FUNCTION = 86, 
    GENERATE = 87, GENVAR = 88, GLOBAL = 89, HIGHZ0 = 90, HIGHZ1 = 91, IF = 92, 
    IFF = 93, IFNONE = 94, IGNORE_BINS = 95, ILLEGAL_BINS = 96, IMPLEMENTS = 97, 
    IMPLIES = 98, IMPORT = 99, INCDIR = 100, DASH_INCDIR = 101, INCLUDE = 102, 
    INITIAL = 103, INOUT = 104, INPUT = 105, INSIDE = 106, INSTANCE = 107, 
    INT = 108, INTEGER = 109, INTERCONNECT = 110, INTERFACE = 111, INTERSECT = 112, 
    JOIN = 113, JOIN_ANY = 114, JOIN_NONE = 115, LARGE = 116, LET = 117, 
    LIBLIST = 118, LIBRARY = 119, LOCAL = 120, LOCALPARAM = 121, LOGIC = 122, 
    LONGINT = 123, MACROMODULE = 124, MATCHES = 125, MEDIUM = 126, MODPORT = 127, 
    MODULE = 128, NAND = 129, NEGEDGE = 130, NETTYPE = 131, NEW = 132, NEXTTIME = 133, 
    NMOS = 134, NOR = 135, NOSHOWCANCELLED = 136, NOT = 137, NOTIF0 = 138, 
    NOTIF1 = 139, NULL_ = 140, OR = 141, OUTPUT = 142, PACKAGE = 143, PACKED = 144, 
    PARAMETER = 145, PMOS = 146, POSEDGE = 147, PRIMITIVE = 148, PRIORITY = 149, 
    PROGRAM = 150, PROPERTY = 151, PROTECTED = 152, PULL0 = 153, PULL1 = 154, 
    PULLDOWN = 155, PULLUP = 156, PULSESTYLE_ONDETECT = 157, PULSESTYLE_ONEVENT = 158, 
    PURE = 159, RAND = 160, RANDC = 161, RANDCASE = 162, RANDOMIZE = 163, 
    RANDSEQUENCE = 164, RCMOS = 165, REAL = 166, REALTIME = 167, REF = 168, 
    REG = 169, REJECT_ON = 170, RELEASE = 171, REPEAT = 172, RESTRICT = 173, 
    RETURN = 174, RNMOS = 175, RPMOS = 176, RTRAN = 177, RTRANIF0 = 178, 
    RTRANIF1 = 179, S_ALWAYS = 180, S_EVENTUALLY = 181, S_NEXTTIME = 182, 
    S_UNTIL = 183, S_UNTIL_WITH = 184, SCALARED = 185, SEQUENCE = 186, SHORTINT = 187, 
    SHORTREAL = 188, SHOWCANCELLED = 189, SIGNED = 190, SMALL = 191, SOFT = 192, 
    SOLVE = 193, SPECIFY = 194, SPECPARAM = 195, STATIC = 196, STD = 197, 
    STRING = 198, STRONG = 199, STRONG0 = 200, STRONG1 = 201, STRUCT = 202, 
    SUPER = 203, SUPPLY0 = 204, SUPPLY1 = 205, SYNC_ACCEPT_ON = 206, SYNC_REJECT_ON = 207, 
    TABLE = 208, TAGGED = 209, TASK = 210, THIS = 211, THROUGHOUT = 212, 
    TIME = 213, TIMEPRECISION = 214, TIMEUNIT = 215, TRAN = 216, TRANIF0 = 217, 
    TRANIF1 = 218, TRI = 219, TRI0 = 220, TRI1 = 221, TRIAND = 222, TRIOR = 223, 
    TRIREG = 224, TYPE = 225, TYPEDEF = 226, UNION = 227, UNIQUE = 228, 
    UNIQUE0 = 229, UNSIGNED = 230, UNTIL = 231, UNTIL_WITH = 232, UNTYPED = 233, 
    USE = 234, UWIRE = 235, VAR = 236, VECTORED = 237, VIRTUAL = 238, VOID = 239, 
    WAIT = 240, WAIT_ORDER = 241, WAND = 242, WEAK = 243, WEAK0 = 244, WEAK1 = 245, 
    WHILE = 246, WILDCARD = 247, WIRE = 248, WITH = 249, WITHIN = 250, WOR = 251, 
    XNOR = 252, XOR = 253, PLUS = 254, PLUSCOLON = 255, PLUSPLUS = 256, 
    MINUS = 257, MINUSCOLON = 258, MINUSMINUS = 259, STAR = 260, SLASH = 261, 
    BSLASH = 262, PERCENT = 263, EQ = 264, EQEQ = 265, NEQ = 266, EQEQEQ = 267, 
    NEQEQ = 268, EQEQQ = 269, NEQQ = 270, LT = 271, LTEQ = 272, GT = 273, 
    GTEQ = 274, LTLTEQ = 275, GTGTEQ = 276, LTLTLTEQ = 277, GTGTGTEQ = 278, 
    CARROTEQ = 279, PERCENTEQ = 280, PLUSEQ = 281, MINUSEQ = 282, STAREQ = 283, 
    SLASHEQ = 284, AMPEQ = 285, PIPEEQ = 286, AMPAMP = 287, AMPAMPAMP = 288, 
    PIPEPIPE = 289, STARSTAR = 290, TILDEPIPE = 291, TILDEAMP = 292, EXCLAM = 293, 
    AMP = 294, PIPE = 295, CARROT = 296, CARROTTILDE = 297, TILDECARROT = 298, 
    GTGT = 299, LTLT = 300, GTGTGT = 301, LTLTLT = 302, RARROW = 303, RARROWARROW = 304, 
    DARROW = 305, TILDE = 306, DOLLAR = 307, STARGT = 308, EQGT = 309, COLONEQ = 310, 
    DOTSTAR = 311, PIPEARROW = 312, PIPEEQARROW = 313, HASHMINUSHASH = 314, 
    HASHEQHASH = 315, COLONSLASH = 316, STARCOLONSTAR = 317, COLONCOLON = 318, 
    COLON = 319, SEMI = 320, COMMA = 321, DOT = 322, QUESTION = 323, QUOTE = 324, 
    DQUOTE = 325, HASH = 326, HASHHASH = 327, AT = 328, ATAT = 329, LPAREN = 330, 
    RPAREN = 331, LBRACK = 332, RBRACK = 333, LBRACE = 334, RBRACE = 335, 
    ERROR_SYS_TASK = 336, FATAL_SYS_TASK = 337, INFO_SYS_TASK = 338, WARNING_SYS_TASK = 339, 
    SETUP_SYS_TASK = 340, HOLD_SYS_TASK = 341, SETUP_HOLD_SYS_TASK = 342, 
    RECOVERY_SYS_TASK = 343, REMOVAL_SYS_TASK = 344, REC_REM_SYS_TASK = 345, 
    SKEW_SYS_TASK = 346, TIME_SKEW_SYS_TASK = 347, FULL_SKEW_SYS_TASK = 348, 
    PERIOD_SYS_TASK = 349, WIDTH_SYS_TASK = 350, NO_CHANGE_SYS_TASK = 351, 
    ROOT_DOT_SYS_TASK = 352, UNIT_SYS_TASK = 353, DECIMAL_NUMBER = 354, 
    BINARY_NUMBER = 355, OCTAL_NUMBER = 356, HEX_NUMBER = 357, REAL_NUMBER = 358, 
    UNBASED_UNSIZED_LITERAL = 359, STRING_LITERAL = 360, TIME_LITERAL = 361, 
    FILE_PATH_SPEC = 362, ESCAPED_IDENTIFIER = 363, SIMPLE_IDENTIFIER = 364, 
    SYSTEM_TF_IDENTIFIER = 365, WHITE_SPACE = 366, ZERO_OR_ONE_Z_OR_X = 367, 
    ONE_STEP = 368, PATH_PULSE = 369, OPTION_DOT = 370, TYPE_OPTION_DOT = 371, 
    SAMPLE = 372, OUTPUT_SYMBOL = 373, EXTRA_LEVEL_SYMBOL = 374, EDGE_SYMBOL = 375
  };

  enum {
    UDP_TABLE_MODE = 1
  };

  explicit SystemVerilogLexer(antlr4::CharStream *input);

  ~SystemVerilogLexer() override;


  std::string getGrammarFileName() const override;

  const std::vector<std::string>& getRuleNames() const override;

  const std::vector<std::string>& getChannelNames() const override;

  const std::vector<std::string>& getModeNames() const override;

  const antlr4::dfa::Vocabulary& getVocabulary() const override;

  antlr4::atn::SerializedATNView getSerializedATN() const override;

  const antlr4::atn::ATN& getATN() const override;

  // By default the static state used to implement the lexer is lazily initialized during the first
  // call to the constructor. You can call this function if you wish to initialize the static state
  // ahead of time.
  static void initialize();

private:

  // Individual action functions triggered by action() above.

  // Individual semantic predicate functions triggered by sempred() above.

};

